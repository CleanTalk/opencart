<?xml version="1.0" encoding="utf-8"?> 
<modification>
    <name>Antispam by Cleantalk</name>
    <version>2.0</version>
    <author>Cleantalk Inc.</author>
    <link>https://cleantalk.org/</link>
    <code>antispambycleantalk</code>
    <!-- Global lib injection -->
    <file path="catalog/controller/startup/startup.php">
        <operation>
            <search><![CDATA[$this->registry->set('cart', new Cart\Cart($this->registry));]]></search>
            <add position="after"><![CDATA[
            // AntiSpam By Cleantalk
            require_once(DIR_SYSTEM . 'library/antispambycleantalk/Core.php');
            $this->registry->set( 'apbct', AntispamByCleantalk\Core::get_instance( $this->registry ) );
			$this->apbct->init( $this->config );
            ]]></add>
        </operation>
    </file>
    <!-- General actions injection -->
    <file path="catalog/controller/common/header.php">
        <!-- JS injection -->
        <operation>
            <search><![CDATA[$data['scripts'] = $this->document->getScripts('header');]]></search>
            <add position="before"><![CDATA[
            $ver = '?v=' . $this->apbct::VERSION;
            $this->document->addScript( 'catalog/view/javascript/antispambycleantalk.js' . $ver );
            $this->apbct->setCookie();
            ]]></add>
        </operation>
        <!-- SFW and RC actions here -->
        <operation>
            <search><![CDATA[return $this->load->view('common/header', $data);]]></search>
            <add position="before"><![CDATA[
            if (empty($this->error))
            {
                if ( $this->request->server['REQUEST_METHOD'] == 'GET' && $this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_enable_sfw') )
                {
                    if( $this->apbct->rc::check($this->config->get('module_antispambycleantalk_access_key')) ) {
                        $this->apbct->rc->perform($this->config->get('module_antispambycleantalk_access_key'));
                    }

                    $this->apbct->sfw->run($this->config->get('module_antispambycleantalk_access_key'));

                    $settings_array = array();

                    if ($this->config->get('module_antispambycleantalk_int_sfw_last_check') && time() - $this->config->get('module_antispambycleantalk_int_sfw_last_check') > 86400)
                    {
                        $this->apbct->sfw->sfw_update($this->config->get('module_antispambycleantalk_access_key'));
                        $settings_array['module_antispambycleantalk_int_sfw_last_check'] = time();
                    }

                    if ($this->config->get('module_antispambycleantalk_int_sfw_last_send_logs') && time() - $this->config->get('module_antispambycleantalk_int_sfw_last_send_logs') > 3600)
                    {
                        $this->apbct->sfw->logs__send($this->config->get('module_antispambycleantalk_access_key'));
                        $settings_array['module_antispambycleantalk_int_sfw_last_send_logs'] = time();
                    }
                    if (count($settings_array) > 0)
                    {
                        foreach ( $settings_array as $setting_name => $setting_value) {
                            $this->db->query( 'UPDATE `' . DB_PREFIX . 'setting` SET `value` = "' . $setting_value . '" WHERE `key` = "' . $setting_name . '"' );
                        }
                    }
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on affiliate/register, account/register -->
    <file path="catalog/controller/{{affiliate,account}/register.php}">
        <operation> 
            <search><![CDATA[return !$this->error;]]></search>
            <add position="before"><![CDATA[
            if (empty($this->error))
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_registrations'))
                {
                    if( $this->apbct->is_spam( $this ) )
                    {
                        $this->error['warning'] = $this->apbct->get_block_comment();
                        if (defined('JOURNAL3_ACTIVE'))
                        {
                            if (\Journal3\Utils\Request::isAjax())
                            {
                                echo json_encode(array(
                                    'status' => 'error',
                                    'response' => $this->error
                                ), true);
                                exit;
                            }
                        }
                    }
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on checkout/register -->
    <file path="catalog/controller/checkout/register.php">
        <operation>
            <search><![CDATA[// Customer Group]]></search>
            <add position="before"><![CDATA[
            if (empty($this->error))
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_registrations'))
                {
                    if( $this->apbct->is_spam( $this ) )
                    {
                        $json['error']['warning'] = $this->apbct->get_block_comment();
                        if (defined('JOURNAL3_ACTIVE'))
                        {
                            if (\Journal3\Utils\Request::isAjax())
                            {
                                echo json_encode(array(
                                    'status' => 'error',
                                    'response' => $this->error
                                ), true);
                                exit;
                            }
                        }
                    }
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on information/contact -->
    <file path="catalog/controller/information/contact.php">
        <operation>
            <search><![CDATA[return !$this->error;]]></search>
            <add position="before"><![CDATA[
            if (empty($this->error))
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_registrations'))
                {
                    if( $this->apbct->is_spam( $this ) )
                    {
                        $this->error['enquiry'] = $this->apbct->get_block_comment();
                        if (defined('JOURNAL3_ACTIVE'))
                        {
                            if (\Journal3\Utils\Request::isAjax())
                            {
                                echo json_encode(array(
                                    'status' => 'error',
                                    'response' => $this->error
                                ), true);
                                exit;
                            }
                        }
                    }
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on checkout/guest -->
    <file path="catalog/controller/checkout/guest.php">
        <operation> 
            <search><![CDATA[// Customer Group]]></search>
            <add position="before"><![CDATA[
            if (empty($json['error']))
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_orders'))
                {
                    if( $this->apbct->is_spam( $this ) )
                        $json['error']['warning'] = $this->apbct->get_block_comment();
                }
            }
            ]]></add>
        </operation>          
    </file>
    <!-- Spam checking on product/product -->
    <file path="catalog/controller/product/product.php">
        <operation>
            <search><![CDATA[if (!isset($json['error'])) {]]></search>
            <add position="before"><![CDATA[
            if (empty($json['error']))
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_reviews'))
                {
                    if( $this->apbct->is_spam( $this ) )
                        $json['error'] = $this->apbct->get_block_comment();
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on account/return -->
    <file path="catalog/controller/account/return.php">
        <operation>
            <search><![CDATA[return !$this->error;]]></search>
            <add position="before"><![CDATA[
            if (!isset($this->error['email']))
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_return'))
                {
                    if( $this->apbct->is_spam( $this ) )
                        $this->error['warning'] = $this->apbct->get_block_comment();
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on journal3/checkout -->
    <file path="catalog/controller/journal3/checkout.php">
        <operation>
            <search index="0"><![CDATA[return $error;]]></search>
            <add position="before"><![CDATA[
            if( empty($error) )
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_orders'))
                {
                     if( $this->apbct->is_spam( $this ) )
                        $error['email'] = $this->apbct->get_block_comment();
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on journal3/form (contact form) -->
    <file path="catalog/controller/journal3/form.php">
        <operation>
            <search index="0"><![CDATA[if ($errors) {]]></search>
            <add position="before"><![CDATA[
            if( ! $errors )
            {
                if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_contact_form'))
                {
                    if( $this->apbct->is_spam( $this ) ) {
                        $errors['agree'] = $this->apbct->get_block_comment();
                    }
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Spam checking on journal3/newsletter -->
    <file path="catalog/controller/journal3/newsletter.php">
        <operation>
            <search index="0"><![CDATA[$this->load->model('journal3/newsletter');]]></search>
            <add position="before"><![CDATA[
            if ($this->config->get('module_antispambycleantalk_status') && $this->config->get('module_antispambycleantalk_check_contact_form'))
            {
                if( $this->apbct->is_spam( $this ) ) {
                    throw new \Exception($this->apbct->get_block_comment());
                }
            }
            ]]></add>
        </operation>
    </file>
    <!-- Hidden fields -->
    <file path="catalog/view/theme/*/template/{{account,affiliate}/register.twig,account/return_form.twig,information/contact.twig}">
        <operation>
            <search index="0"><![CDATA[<form ]]></search>
            <add position="after"><![CDATA[
            <input type="hidden" name="ct_checkjs" id="ct_checkjs" value="0" />
            ]]></add>
        </operation>
    </file>
    <file path="catalog/view/theme/*/template/{product/product.twig,journal3/module/product_blocks_reviews.twig}">
        <operation>
            <search index="0"><![CDATA[<form class="form-horizontal" id="form-review">]]></search>
            <add position="after"><![CDATA[
            <input type="hidden" name="ct_checkjs" id="ct_checkjs" value="0" />
            ]]></add>
        </operation>
    </file>
    <file path="catalog/view/theme/*/template/checkout/checkout.twig">
        <operation>
            <search index="0"><![CDATA[<div class="panel-collapse collapse" id="collapse-payment-address">]]></search>
            <add position="after"><![CDATA[
            <input type="hidden" name="ct_checkjs" id="ct_checkjs" value="0" />
            ]]></add>
        </operation>
    </file>
    <file path="catalog/view/theme/*/template/journal3/checkout/register.twig">
        <operation>
            <search index="0"><![CDATA[<div]]></search>
            <add position="before"><![CDATA[
            <input type="hidden" name="ct_checkjs" id="ct_checkjs" value="0" />
            ]]></add>
        </operation>
    </file>
    <file path="catalog/view/theme/*/template/journal3/module/{form,newsletter}.twig">
        <operation>
            <search index="0"><![CDATA[</form>]]></search>
            <add position="before"><![CDATA[
            <input type="hidden" name="ct_checkjs" class="ct_checkjs" value="0" />
            ]]></add>
        </operation>
    </file>
</modification>